{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import { PluginListenerHandle } from '@capacitor/core';\n\ntype VapiEventNames =\n  | 'call-end'\n  | 'call-start'\n  | 'volume-level'\n  | 'speech-start'\n  | 'speech-end'\n  | 'message'\n  | 'error';\n\nexport interface VapiPlugin {\n  start(options: { assistantId: string }): Promise<void>;\n  stop(): Promise<void>;\n  configure(options: { publicKey: string }): Promise<void>;\n  setMuted(options: { muted: boolean }): Promise<void>;\n  send(options: { type: string; control: string }): Promise<void>;\n  addListener(\n    eventName: VapiEventNames,\n    listenerFunc: (event: any) => void,\n  ): Promise<PluginListenerHandle>;\n}\n"]}